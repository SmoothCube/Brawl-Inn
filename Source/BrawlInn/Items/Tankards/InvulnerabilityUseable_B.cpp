// Fill out your copyright notice in the Description page of Project Settings.


#include "InvulnerabilityUseable_B.h"
#include "GameFramework/CharacterMovementComponent.h"
#include "Components/CapsuleComponent.h"
#include "Sound/SoundCue.h"
#include "Kismet/GameplayStatics.h"

#include "BrawlInn.h"
#include "Characters/Player/PlayerCharacter_B.h"
#include "Components/PunchComponent_B.h"
#include "NiagaraComponent.h"
#include "System/GameInstance_B.h"
#include "System/GameModes/MainGameMode_B.h"

AInvulnerabilityUseable_B::AInvulnerabilityUseable_B()
{
	Duration = 10.f;
	HoldRotation = FRotator(180, 273.599243, 0.000000);
}

void AInvulnerabilityUseable_B::Use_Implementation()
{
	BWarn("Use Powerup!");

	Character = Cast<APlayerCharacter_B>(GetAttachParentActor());
	if (!Character) { BWarn("Could not find player while using, something is wrong! ABORT!"); return; }

	OldMovementSpeed = Character->NormalMaxWalkSpeed;
	OldAcceleration = Character->GetCharacterMovement()->MaxAcceleration;

	Character->MakeInvulnerable(-1.f, false);

	Character->GetCharacterMovement()->MaxAcceleration = OldAcceleration + AccelerationBoost;
	Character->GetCharacterMovement()->MaxWalkSpeed = OldMovementSpeed + MovementSpeedBoost;
	Character->NormalMaxWalkSpeed = OldMovementSpeed + MovementSpeedBoost;

	Character->SetState(EState::EPoweredUp);

	Character->GetCapsuleComponent()->SetCollisionProfileName("Capsule-OverlapPawn");

	Character->SetSpecialMaterial(PlayerOverlayMaterial);

	if (Character->PunchComponent)
	{
		Character->PunchComponent->SetCanPunch(false);
		Character->PunchComponent->SetCanDash(false);
	}

	Character->GetChiliBrewParticle()->Activate();

	// QUICK FIX
	UGameInstance_B* GameInstance = Cast<UGameInstance_B>(GetGameInstance());
	if (GameInstance && Character->GetChiliBrewSound())
	{
		UGameplayStatics::PlaySound2D(GetWorld(), Character->GetChiliBrewSound(),
			0.5 * GameInstance->GetMasterVolume() * GameInstance->
			GetSfxVolume());
	}


	AMainGameMode_B* GameMode = Cast<AMainGameMode_B>(UGameplayStatics::GetGameMode(GetWorld()));
	if (GameMode)
	{
		GameMode->SetMusic(PoweredUpMusic);
	}

	Super::Use_Implementation();
}

void AInvulnerabilityUseable_B::ResetBoost()
{
	BWarn("Reset Boost!");

	if (IsValid(Character))
	{
		Character->SetState(EState::EWalking);

		if (Character->PunchComponent)
		{
			Character->PunchComponent->SetCanPunch(true);
			Character->PunchComponent->SetCanDash(true);
		}

		Character->GetCapsuleComponent()->SetCollisionProfileName("Capsule");

		Character->MakeVulnerable();

		Character->GetCharacterMovement()->MaxWalkSpeed = OldMovementSpeed;
		Character->GetCharacterMovement()->MaxAcceleration = OldAcceleration;
		Character->NormalMaxWalkSpeed = OldMovementSpeed;

		Character->RemoveSpecialMaterial();

		Character->GetChiliBrewParticle()->Deactivate();


		AMainGameMode_B* GameMode = Cast<AMainGameMode_B>(UGameplayStatics::GetGameMode(GetWorld()));
		if (GameMode)
		{
			GameMode->ResetMusic();
		}
	}
}
