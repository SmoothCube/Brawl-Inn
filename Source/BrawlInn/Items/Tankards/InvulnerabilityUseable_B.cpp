// Fill out your copyright notice in the Description page of Project Settings.


#include "InvulnerabilityUseable_B.h"
#include "GameFramework/CharacterMovementComponent.h"
#include "Components/CapsuleComponent.h"
#include "Sound/SoundCue.h"
#include "Components/AudioComponent.h"
#include "Kismet/GameplayStatics.h"

#include "BrawlInn.h"
#include "Characters/Player/PlayerCharacter_B.h"
#include "Components/PunchComponent_B.h"
#include "NiagaraComponent.h"
#include "System/GameInstance_B.h"
#include "System/GameModes/MainGameMode_B.h"

AInvulnerabilityUseable_B::AInvulnerabilityUseable_B()
{
	MovementSpeedWhenHeld = 1400.f;
	Duration = 10.f;
	HoldRotation = FRotator(180, 273.599243, 0.000000);
}

void AInvulnerabilityUseable_B::Use_Implementation()
{
	if (!OwningCharacter) { BWarn("Could not find player while using, something is wrong! ABORT!"); return; }

	OldMovementSpeed = OwningCharacter->NormalMaxWalkSpeed;
	OldAcceleration = OwningCharacter->GetCharacterMovement()->MaxAcceleration;

	OwningCharacter->MakeInvulnerable(-1.f, false);

	OwningCharacter->GetCharacterMovement()->MaxAcceleration = OldAcceleration + AccelerationBoost;
	OwningCharacter->GetCharacterMovement()->MaxWalkSpeed = OldMovementSpeed + MovementSpeedBoost;
	OwningCharacter->NormalMaxWalkSpeed = OldMovementSpeed + MovementSpeedBoost;

	OwningCharacter->SetState(EState::EPoweredUp);

	OwningCharacter->GetCapsuleComponent()->SetCollisionProfileName("Capsule-OverlapPawn");

	OwningCharacter->SetSpecialMaterial(PlayerOverlayMaterial);

	if (OwningCharacter->PunchComponent)
	{
		OwningCharacter->PunchComponent->SetCanPunch(false);
		OwningCharacter->PunchComponent->SetCanDash(false);
	}

	APlayerCharacter_B* Player = Cast<APlayerCharacter_B>(OwningCharacter);
	UGameInstance_B* GameInstance = Cast<UGameInstance_B>(GetGameInstance());
	if (Player)
	{
		Player->GetChiliBrewParticle()->Activate();

		if (GameInstance && Player->GetChiliBrewSound())
		{
			Player->GetChiliBrewSound()->SetVolumeMultiplier(GameInstance->GetMasterVolume() * GameInstance->GetSfxVolume());
			Player->GetChiliBrewSound()->Play();
		}
	}

	if (GameInstance)
	{
		GameInstance->SetAndPlayMusic(PoweredUpMusic);
	}

	Super::Use_Implementation();
}

void AInvulnerabilityUseable_B::ResetBoost()
{
	if (IsValid(OwningCharacter))
	{
		OwningCharacter->SetState(EState::EWalking);
		OwningCharacter->SetCanMove(true);
		if (OwningCharacter->PunchComponent)
		{
			OwningCharacter->PunchComponent->SetCanPunch(true);
			OwningCharacter->PunchComponent->SetCanDash(true);
		}

		OwningCharacter->GetCapsuleComponent()->SetCollisionProfileName("Capsule");

		OwningCharacter->MakeVulnerable();

		OwningCharacter->GetCharacterMovement()->MaxWalkSpeed = OldMovementSpeed;
		OwningCharacter->GetCharacterMovement()->MaxAcceleration = OldAcceleration;
		OwningCharacter->NormalMaxWalkSpeed = OldMovementSpeed;

		OwningCharacter->RemoveSpecialMaterial();

		//TODO cast to PlayerCharacter here
		APlayerCharacter_B* Player = Cast<APlayerCharacter_B>(OwningCharacter);
		if (Player)
			Player->GetChiliBrewParticle()->Deactivate();

		AMainGameMode_B* GameMode = Cast<AMainGameMode_B>(UGameplayStatics::GetGameMode(GetWorld()));
		if (GameMode)
		{
			GameMode->ResetMusic();
		}
	}

	Super::ResetBoost();
}
